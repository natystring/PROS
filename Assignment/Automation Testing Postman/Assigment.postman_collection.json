{
	"info": {
		"_postman_id": "5e2ff3c3-3469-4dbc-8728-bd20d8614a50",
		"name": "Assigment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31967446"
	},
	"item": [
		{
			"name": "API Currency Conversion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the API contains the fields sourceCurrency and targetCurrency\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.expect(pm.response.text()).to.include(\"sourceCurrency\");    \r",
							"    pm.expect(pm.response.text()).to.include(\"targetCurrency\"); \r",
							"    pm.expect(jsonData.conversion[0].sourceCurrency).to.eql(\"USD\");\r",
							"    pm.expect(jsonData.conversion[0].targetCurrency).to.eql(\"EUR\");\r",
							"    pm.expect(jsonData.conversion[0].sourceCurrency).to.be.a('string');\r",
							"    pm.expect(jsonData.conversion[0].targetCurrency).to.be.a('string');\r",
							"    pm.expect(jsonData.conversion[0].sourceCurrency).to.have.lengthOf(3);\r",
							"    pm.expect(jsonData.conversion[0].targetCurrency).to.have.lengthOf(3);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {    \r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/public/conversion/USD/EUR?amount=50.00&startDate=2023-12-28",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"public",
						"conversion",
						"USD",
						"EUR"
					],
					"query": [
						{
							"key": "amount",
							"value": "50.00"
						},
						{
							"key": "startDate",
							"value": "2023-12-28"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API Exchange Rate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the exchange rate field does not contain null, zero, hyphens, empty or undefined values\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    const valueRate = Object.keys(jsonData.exchangerate.valueRate).length;\r",
							"\r",
							"    for (var i = 0; i < valueRate.length; i++){\r",
							"      pm.expect(jsonData.exchangerate[0].valueRate[i].COP).is.not.null;\r",
							"      pm.expect(jsonData.exchangerate[0].valueRate[i].COP).is.not.equals(0);\r",
							"      pm.expect(jsonData.exchangerate[0].valueRate[i].COP).is.not.string;\r",
							"      pm.expect(jsonData.exchangerate[0].valueRate[i].COP).is.not.empty;\r",
							"      pm.expect(jsonData.exchangerate[0].valueRate[i].COP).is.not.undefined;\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the dateRate field does not contain null, zero, hyphens, empty or undefined values\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    const valueRate = Object.keys(jsonData.exchangerate.valueRate).length;\r",
							"\r",
							"    for (var i = 0; i < valueRate.length; i++){\r",
							"      pm.expect(jsonData.exchangerate[0].dateRate[i]).is.not.null;\r",
							"      pm.expect(jsonData.exchangerate[0].dateRate[i]).is.not.equals(0);\r",
							"      pm.expect(jsonData.exchangerate[0].dateRate[i]).is.not.string;\r",
							"      pm.expect(jsonData.exchangerate[0].dateRate[i]).is.not.empty;\r",
							"      pm.expect(jsonData.exchangerate[0].dateRate[i]).is.not.undefined;\r",
							"    }\r",
							"});\r",
							"\r",
							"pm.test(\"Validate dataRate format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let dateRate = jsonData.exchangerate[0].dateRate;    \r",
							"    let moment = require ('moment');\r",
							"\r",
							"    pm.expect(dateRate).to.include(moment(dateRate).format('YYYY-MM-DD HH:mm:ss'));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/public/exchangerate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"public",
						"exchangerate"
					]
				}
			},
			"response": []
		}
	]
}